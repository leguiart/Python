import random
lst=list()
mlist=[]

def win_loss_draw(x, y, lst, a, b):
    if x>y:
        lst[a][3]=lst[a][3]+1
        lst[b][5]=lst[a][5]+1
    elif x<y:
        lst[a][5]=lst[a][5]+1
        lst[b][3]=lst[b][3]+1
    else:
        lst[a][4]=lst[a][4]+1
        lst[b][4]=lst[b][4]+1
        
def match_count(lst, a):
    s=0
    for i in range(3,6):
        s=lst[a][i]+s        
    return s

def points(wins, draws):
    return wins*3 + draws

for i in range(1,19):
    for j in range(10):
        if j==0:
            lst.append(i)
        else:
            lst.append(0)
    mlist.append(lst)
    lst=[]
    
j=1
x=0
y=0

for i in mlist:
    z=random.randrange(3,6)
    j= mlist.index(i)+1
    while j<18:
        x=random.randrange(0,6)
        y=random.randrange(0,6)
        mlist[mlist.index(i)][6]=x+mlist[mlist.index(i)][6]
        mlist[mlist.index(i)][7]=y+mlist[mlist.index(i)][7]
        mlist[j][6]=y+mlist[j][6]
        mlist[j][7]=x+mlist[j][7]
        win_loss_draw(x, y, mlist, mlist.index(i), j)
        j+=1
    if  match_count(mlist, mlist.index(i))>17:
        while mlist[mlist.index(i)][z]-(match_count(mlist, mlist.index(i))-17)<0:
            z=random.randrange(3,6)
        mlist[mlist.index(i)][z]= mlist[mlist.index(i)][z]-(match_count(mlist, mlist.index(i))-17)
    elif match_count(mlist, mlist.index(i))<17:
        mlist[mlist.index(i)][z]= mlist[mlist.index(i)][z]+(17-match_count(mlist, mlist.index(i))) 
    mlist[mlist.index(i)][1] = points(mlist[mlist.index(i)][3], mlist[mlist.index(i)][4])
    mlist[mlist.index(i)][8] = mlist[mlist.index(i)][6]-mlist[mlist.index(i)][7]
    mlist[mlist.index(i)][2] = match_count(mlist, mlist.index(i))

    
mlist.sort(key= lambda x: x[1])
mlist.reverse()
print '\n'

for i in mlist:
    print i
